"use strict";

exports.__esModule = true;
var _exportNames = {};
exports.default = void 0;

var _plugins = require("../utils/plugins");

var directivePlugins = _interopRequireWildcard(require("./plugins"));

Object.keys(directivePlugins).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  exports[key] = directivePlugins[key];
});

var _pluginsLegacy = require("./plugins-legacy");

Object.keys(_pluginsLegacy).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  exports[key] = _pluginsLegacy[key];
});

var _toggle = require("./toggle");

Object.keys(_toggle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  exports[key] = _toggle[key];
});

var _modal = require("./modal");

Object.keys(_modal).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  exports[key] = _modal[key];
});

var _scrollspy = require("./scrollspy");

Object.keys(_scrollspy).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  exports[key] = _scrollspy[key];
});

var _tooltip = require("./tooltip");

Object.keys(_tooltip).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  exports[key] = _tooltip[key];
});

var _popover = require("./popover");

Object.keys(_popover).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  exports[key] = _popover[key];
});

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

// Export all directive group plugins as named exports
// Export all legacy named directive group plugins as named exports
// Named exports of all directives
// Default export is a plugin that installs all plugins
var _default = {
  install: (0, _plugins.installFactory)({
    plugins: directivePlugins
  })
};
exports.default = _default;