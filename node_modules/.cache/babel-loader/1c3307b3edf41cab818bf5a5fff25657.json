{"remainingRequest":"/home/chris/Documents/Repos/testVue/quiz/node_modules/babel-loader/lib/index.js!/home/chris/Documents/Repos/testVue/quiz/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/chris/Documents/Repos/testVue/quiz/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/chris/Documents/Repos/testVue/quiz/src/components/QuestionBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/chris/Documents/Repos/testVue/quiz/src/components/QuestionBox.vue","mtime":1557730996126},{"path":"/home/chris/Documents/Repos/testVue/quiz/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/chris/Documents/Repos/testVue/quiz/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/chris/Documents/Repos/testVue/quiz/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/chris/Documents/Repos/testVue/quiz/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"/home/chris/Documents/Repos/testVue/quiz/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport _ from \"lodash\";\nexport default {\n  props: {\n    currentQuestion: Object,\n    next: Function,\n    increment: Function\n  },\n  data: function data() {\n    return {\n      selectedIndex: null,\n      shuffledAnswers: [],\n      answered: false,\n      correctIndex: null\n    };\n  },\n  computed: {\n    answers: function answers() {\n      return _.shuffle([].concat(_toConsumableArray(this.currentQuestion.incorrect_answers), [this.currentQuestion.correct_answer]));\n    }\n  },\n  watch: {\n    currentQuestion: {\n      immediate: true,\n      handler: function handler() {\n        this.selectedIndex = null;\n        this.answered = false;\n        this.correctIndex = this.answers.indexOf(this.currentQuestion.correct_answer);\n      }\n    }\n  },\n  methods: {\n    setSelectedAnswer: function setSelectedAnswer(index) {\n      this.selectedIndex = index;\n    },\n    submitAnswer: function submitAnswer() {\n      this.answered = true;\n\n      if (this.selectedIndex === this.correctIndex) {\n        return this.increment(true);\n      }\n\n      return this.increment(false);\n    },\n    getAnswerClass: function getAnswerClass(index) {\n      if (!this.answered && this.selectedIndex === index) {\n        return \"selected\";\n      }\n\n      if (this.answered) {\n        if (this.correctIndex === index) {\n          return \"correct\";\n        }\n\n        if (this.selectedIndex === index && this.correctIndex !== index) {\n          return \"incorrect\";\n        }\n      }\n\n      return \"\";\n    }\n  }\n};",{"version":3,"sources":["QuestionBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,OAAA,CAAA,MAAA,QAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,eAAA,EAAA,MADA;AAEA,IAAA,IAAA,EAAA,QAFA;AAGA,IAAA,SAAA,EAAA;AAHA,GADA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,aAAA,EAAA,IADA;AAEA,MAAA,eAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA,KAHA;AAIA,MAAA,YAAA,EAAA;AAJA,KAAA;AAMA,GAbA;AAcA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,aAAA,CAAA,CAAA,OAAA,8BACA,KAAA,eAAA,CAAA,iBADA,IAEA,KAAA,eAAA,CAAA,cAFA,GAAA;AAIA;AANA,GAdA;AAsBA,EAAA,KAAA,EAAA;AACA,IAAA,eAAA,EAAA;AACA,MAAA,SAAA,EAAA,IADA;AAEA,MAAA,OAFA,qBAEA;AACA,aAAA,aAAA,GAAA,IAAA;AACA,aAAA,QAAA,GAAA,KAAA;AACA,aAAA,YAAA,GAAA,KAAA,OAAA,CAAA,OAAA,CACA,KAAA,eAAA,CAAA,cADA,CAAA;AAGA;AARA;AADA,GAtBA;AAkCA,EAAA,OAAA,EAAA;AACA,IAAA,iBADA,6BACA,KADA,EACA;AACA,WAAA,aAAA,GAAA,KAAA;AACA,KAHA;AAIA,IAAA,YAJA,0BAIA;AACA,WAAA,QAAA,GAAA,IAAA;;AACA,UAAA,KAAA,aAAA,KAAA,KAAA,YAAA,EAAA;AACA,eAAA,KAAA,SAAA,CAAA,IAAA,CAAA;AACA;;AACA,aAAA,KAAA,SAAA,CAAA,KAAA,CAAA;AACA,KAVA;AAWA,IAAA,cAXA,0BAWA,KAXA,EAWA;AACA,UAAA,CAAA,KAAA,QAAA,IAAA,KAAA,aAAA,KAAA,KAAA,EAAA;AACA,eAAA,UAAA;AACA;;AACA,UAAA,KAAA,QAAA,EAAA;AACA,YAAA,KAAA,YAAA,KAAA,KAAA,EAAA;AACA,iBAAA,SAAA;AACA;;AACA,YAAA,KAAA,aAAA,KAAA,KAAA,IAAA,KAAA,YAAA,KAAA,KAAA,EAAA;AACA,iBAAA,WAAA;AACA;AACA;;AACA,aAAA,EAAA;AACA;AAxBA;AAlCA,CAAA","sourcesContent":["<template>\n  <div class=\"question-box-container\">\n    <b-jumbotron>\n      <template slot=\"lead\">{{ currentQuestion.question }}</template>\n\n      <hr class=\"my-4\">\n\n      <b-list-group>\n        <b-list-group-item\n          v-for=\"(answer, index) in answers\"\n          :key=\"index\"\n          @click=\"setSelectedAnswer(index)\"\n          :class=\"getAnswerClass(index)\"\n        >{{ answer }}</b-list-group-item>\n      </b-list-group>\n\n      <b-button\n        variant=\"primary\"\n        @click=\"submitAnswer\"\n        :disabled=\"selectedIndex===null || answered\"\n      >Submit</b-button>\n      <b-button variant=\"success\" @click=\"next\">Next</b-button>\n    </b-jumbotron>\n  </div>\n</template>\n\n<script>\nimport _ from \"lodash\";\n\nexport default {\n  props: {\n    currentQuestion: Object,\n    next: Function,\n    increment: Function\n  },\n  data() {\n    return {\n      selectedIndex: null,\n      shuffledAnswers: [],\n      answered: false,\n      correctIndex: null\n    };\n  },\n  computed: {\n    answers() {\n      return _.shuffle([\n        ...this.currentQuestion.incorrect_answers,\n        this.currentQuestion.correct_answer\n      ]);\n    }\n  },\n  watch: {\n    currentQuestion: {\n      immediate: true,\n      handler() {\n        this.selectedIndex = null;\n        this.answered = false;\n        this.correctIndex = this.answers.indexOf(\n          this.currentQuestion.correct_answer\n        );\n      }\n    }\n  },\n  methods: {\n    setSelectedAnswer(index) {\n      this.selectedIndex = index;\n    },\n    submitAnswer() {\n      this.answered = true;\n      if (this.selectedIndex === this.correctIndex) {\n        return this.increment(true);\n      }\n      return this.increment(false);\n    },\n    getAnswerClass(index) {\n      if (!this.answered && this.selectedIndex === index) {\n        return \"selected\";\n      }\n      if (this.answered) {\n        if (this.correctIndex === index) {\n          return \"correct\";\n        }\n        if (this.selectedIndex === index && this.correctIndex !== index) {\n          return \"incorrect\";\n        }\n      }\n      return \"\";\n    }\n  }\n};\n</script>\n\n<style scoped>\n.list-group {\n  margin-bottom: 15px;\n}\n.list-group-item:hover {\n  background: #eeeeee;\n  cursor: pointer;\n}\n.btn {\n  margin: 0 5px;\n}\n.selected {\n  background: lightblue;\n}\n.correct {\n  background: lightgreen;\n}\n.incorrect {\n  background: red;\n}\n</style>\n"],"sourceRoot":"src/components"}]}